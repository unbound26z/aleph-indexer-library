/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet'
/**
 * This type is used to derive the {@link VoteThresholdPercentage} type as well as the de/serializer.
 * However don't refer to it in your code but use the {@link VoteThresholdPercentage} type instead.
 *
 * @category userTypes
 * @category enums
 * @category generated
 * @private
 */
export type VoteThresholdPercentageRecord = {
  YesVote: { fields: [number] }
  Quorum: { fields: [number] }
}

/**
 * Union type respresenting the VoteThresholdPercentage data enum defined in Rust.
 *
 * NOTE: that it includes a `__kind` property which allows to narrow types in
 * switch/if statements.
 * Additionally `isVoteThresholdPercentage*` type guards are exposed below to narrow to a specific variant.
 *
 * @category userTypes
 * @category enums
 * @category generated
 */
export type VoteThresholdPercentage =
  beet.DataEnumKeyAsKind<VoteThresholdPercentageRecord>

export const isVoteThresholdPercentageYesVote = (
  x: VoteThresholdPercentage,
): x is VoteThresholdPercentage & { __kind: 'YesVote' } =>
  x.__kind === 'YesVote'
export const isVoteThresholdPercentageQuorum = (
  x: VoteThresholdPercentage,
): x is VoteThresholdPercentage & { __kind: 'Quorum' } => x.__kind === 'Quorum'

/**
 * @category userTypes
 * @category generated
 */
export const voteThresholdPercentageBeet =
  beet.dataEnum<VoteThresholdPercentageRecord>([
    [
      'YesVote',
      new beet.BeetArgsStruct<VoteThresholdPercentageRecord['YesVote']>(
        [['fields', beet.fixedSizeTuple([beet.u8])]],
        'VoteThresholdPercentageRecord["YesVote"]',
      ),
    ],
    [
      'Quorum',
      new beet.BeetArgsStruct<VoteThresholdPercentageRecord['Quorum']>(
        [['fields', beet.fixedSizeTuple([beet.u8])]],
        'VoteThresholdPercentageRecord["Quorum"]',
      ),
    ],
  ]) as beet.FixableBeet<VoteThresholdPercentage, VoteThresholdPercentage>
